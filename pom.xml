<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>net.2ch.dtm.bitwig</groupId>
  <artifactId>bitwig-japanese-pack</artifactId>
  <version>0.7-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>bitwig-japanese-pack</name>

  <pluginRepositories>
    <pluginRepository>
      <id>sonatype-public-repository</id>
      <url>https://oss.sonatype.org/content/groups/public</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <ohruri.version>20150606</ohruri.version>
    <ohruri.file.id>63358</ohruri.file.id>
    <ohruri.md5>18edece40298e08f90e4b1a27b2ba645</ohruri.md5>
    <bitwig.version>1.1.9RC1</bitwig.version>
  </properties>

  <profiles>
    <profile>
      <id>mac-profile</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <bitwig.lib.ext.directory>/Applications/Bitwig Studio.app/Contents/PlugIns/JavaVM.plugin/Contents/Home/lib/ext</bitwig.lib.ext.directory>
        <bitwig.localization.directory>/Applications/Bitwig Studio.app/Contents/Resources/localization</bitwig.localization.directory>
      </properties>
    </profile>

    <profile>
      <id>windows-profile</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <bitwig.lib.ext.directory>C:/Program Files/Bitwig Studio ${bitwig.version}/jre/lib/ext</bitwig.lib.ext.directory>
        <bitwig.localization.directory>C:/Program Files/Bitwig Studio ${bitwig.version}/resources/localization</bitwig.localization.directory>
      </properties>
    </profile>

    <profile>
      <id>linux-profile</id>
      <activation>
        <os>
          <family>unix</family>
          <name>linux</name>
        </os>
      </activation>
      <properties>
        <bitwig.lib.ext.directory>/opt/bitwig-studio/bin/jre/lib/ext</bitwig.lib.ext.directory>
        <bitwig.localization.directory>/opt/bitwig-studio/resources/localization</bitwig.localization.directory>
      </properties>
    </profile>
  </profiles>

  <build>

    <plugins>

      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>maven-download-plugin</artifactId>
        <version>1.1.0</version>
        <executions>
          <!-- 大瑠璃フォントのダウンロード -->
          <execution>
            <id>download-ohruri</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <!--
                  http://osdn.jp/frs/redir.php?m=jaist&f=%2Fkoruri%2F63358%2FOhruri-20150606.tar.xz
                  -->
              <url>http://osdn.jp/frs/redir.php?m=jaist&amp;f=/koruri/${ohruri.file.id}/Ohruri-${ohruri.version}.tar.xz</url>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <md5>${ohruri.md5}</md5>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <!-- 大瑠璃フォントの解凍 -->
          <execution>
            <id>unpack-ohruri</id>
            <phase>generate-resources</phase>
            <configuration>
              <tasks>
                <taskdef uri="antlib:org.apache.ant.compress"
                         resource="org/apache/ant/compress/antlib.xml"
                         classpathref="maven.plugin.classpath"></taskdef>
                <cmp:unxz src="${project.build.directory}/Ohruri-${ohruri.version}.tar.xz"
                          dest="${project.build.directory}"
                          xmlns:cmp="antlib:org.apache.ant.compress"/>
                <cmp:untar src="${project.build.directory}/Ohruri-${ohruri.version}.tar"
                           dest="${project.build.directory}"
                           xmlns:cmp="antlib:org.apache.ant.compress"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>


          <!-- 小瑠璃フォントをOpenSansにrenameし出力ディレクトリにコピー -->
          <execution>
            <id>copy-rename-ohruri</id>
            <phase>process-resources</phase>
            <configuration>
              <tasks>
                <copy todir="${project.build.outputDirectory}/fonts">
                  <fileset dir="${project.build.directory}/Ohruri-${ohruri.version}"/>
                  <mapper type="glob" from="Ohruri-*.ttf" to="OpenSans-*.ttf"/>
                </copy>
                <copy todir="${project.build.outputDirectory}/fonts">
                  <fileset dir="${project.build.directory}/Ohruri-${ohruri.version}"
                           includes="*.txt *.md"/>
                </copy>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

          <execution>
            <id>copy-font-to-bitwig</id>
            <phase>integration-test</phase>
            <configuration>
              <tasks>
                <!-- bitwigのlib/extにファイルをコピー -->
                <copy file="${project.build.directory}/${project.build.finalName}.${project.packaging}"
                      todir="${bitwig.lib.ext.directory}"/>
                <!-- bitwigのlocalizationにファイルをコピー -->
                <copy file="${project.build.outputDirectory}/localization/Bitwig Studio-resources_ja.properties"
                      todir="${bitwig.localization.directory}"/>
                <copy file="${project.build.outputDirectory}/localization/GUIApplication-resources_ja.properties"
                      todir="${bitwig.localization.directory}"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

          <execution>
            <id>copy-resources-for-test</id>
            <phase>process-test-resources</phase>
            <configuration>
              <tasks>
                <!-- translated resources -->
                <copy todir="${project.build.directory}/test/resources">
                  <fileset dir="src/main/resources/localization" includes="*.properties"/>
                </copy>
                <!-- bitwig default english resources -->
                <copy file="${bitwig.localization.directory}/Bitwig Studio-resources.properties"
                      toDir="${project.build.directory}/test/resources"/>
                <copy file="${bitwig.localization.directory}/GUIApplication-resources.properties"
                      toDir="${project.build.directory}/test/resources"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>

        <dependencies>
          <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-compress</artifactId>
            <version>1.4</version>
            <exclusions>
              <exclusion>
                <groupId>ant</groupId>
                <artifactId>ant</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
          <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.9</version>
          </dependency>
          <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-nodeps</artifactId>
            <version>1.8.1</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>com.googlecode.l10n-maven-plugin</groupId>
        <artifactId>l10n-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>validate-resources</id>
            <phase>test</phase>
            <goals>
              <goal>validate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <propertyDir>${project.build.directory}/test/resources</propertyDir>
          <ignoreFailure>true</ignoreFailure>
          <dictionaryDir/>
          <reportsDir>${project.build.directory}/l10n-reports</reportsDir>
          <formatter>messageFormat</formatter>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
